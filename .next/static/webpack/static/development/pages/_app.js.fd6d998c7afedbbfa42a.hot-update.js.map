{"version":3,"file":"static/webpack/static/development/pages/_app.js.fd6d998c7afedbbfa42a.hot-update.js","sources":["webpack:///./components/Search.js"],"sourcesContent":["import React from \"react\";\nimport Downshift from \"downshift\";\nimport Router from \"next/router\";\nimport { ApolloConsumer } from \"react-adopt\";\nimport gql from \"graphql-tag\";\nimport debounce from \"lodash.debounce\";\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\n\nconst SEARCH_ITEMS_QUERY = gql`\n  query SEARCH_ITEMS_QUERY($searchTerm: String!) {\n    # we are doing OR because if we just put in two params in our where, both would have contain the term\n    # also, title_contains and description_contains are part of our generated filters in prisma\n    items(\n      where: {\n        OR: [\n          { title_contains: $searchTerm }\n          { description_contains: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      image\n      title\n    }\n  }\n`;\n\nclass AutoComplete extends React.Component {\n  render() {\n    return (\n      <SearchStyles>\n        <div>\n          {/* Instead of wrapping out input in a <Query/> (which would query every time we render our search compinent,\n                we can wrap it in ApolloConsumer to expose our input \n                )*/}\n          <ApolloConsumer>\n            {(client) => (\n              <input type=\"search\" onChange={() => console.log(client)} />\n            )}\n          </ApolloConsumer>\n          <DropDown>\n            <p>Items will go here</p>\n          </DropDown>\n        </div>\n      </SearchStyles>\n    );\n  }\n}\n\nexport default AutoComplete;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAkBA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAnBA;AACA;AAqBA;;;;A","sourceRoot":""}