{"version":3,"file":"static/webpack/static/development/pages/items.js.a1dbae28504838408353.hot-update.js","sources":["webpack:///./components/Item.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Link from \"next/link\";\nimport PropTypes from \"prop-types\";\nimport Title from \"./styles/Title\";\nimport ItemStyles from \"./styles/ItemStyles\";\nimport PriceTag from \"./styles/PriceTag\";\nimport formatMoney from \"../lib/formatMoney\";\nimport DeleteItem from \"./DeleteItem\";\nimport AddToCart from \"./AddToCart\";\n\nexport default class Item extends Component {\n  static propTypes = {\n    item: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const { item } = this.props;\n    return (\n      <ItemStyles>\n        {/* '&&' is another way to make that JS run like a ternerary, but you won't \n          have to return null if it is false*/}\n        {item.image && <img src={item.image} alt={item.title} />}\n        <Title>\n          {/* We actually want to put a query param at the end of our href.\n              We use use an object literal. In JSX, you pass reference to something, like a variable, with {}\n              But if an object literal. The second set is the object literal {{}}\n              pathname is the route they will go\n              query will finish off the link with the 'item?id=...'\n          */}\n          <Link\n            href={{\n              pathname: \"/item\",\n              query: { id: item.id },\n            }}\n          >\n            <a>{item.title}</a>\n          </Link>\n        </Title>\n        <PriceTag>{formatMoney(item.price)}</PriceTag>\n        <p>{item.description}</p>\n        <div className=\"buttonList\">\n          <Link\n            href={{\n              pathname: \"update\",\n              query: { id: item.id },\n            }}\n          >\n            <a>Edit</a>\n          </Link>\n          <AddToCart id={item.id} />\n          <DeleteItem id={item.id}>Delete this item</DeleteItem>\n        </div>\n      </ItemStyles>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAKA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA5CA;AACA;AADA;AAEA;AADA;AACA;;;;;A","sourceRoot":""}