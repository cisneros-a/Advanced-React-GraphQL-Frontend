{"version":3,"file":"static/webpack/static/development/pages/permissions.js.d5f361e9037a17aa04fc.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import { Query } from \"react-apollo\";\nimport Error from \"./ErrorMessage\";\nimport gql from \"graphql-tag\";\nimport PropTypes from \"prop-types\";\nimport Table from \"./styles/Table\";\nimport SickButton from \"./styles/SickButton\";\n\nconst possiblePermissions = [\n  \"ADMIN\",\n  \"USER\",\n  \"ITEMCREATE\",\n  \"ITEMUPDATE\",\n  \"ITEMDELETE\",\n  \"PERMISSIONUPDATE\",\n];\n\nconst UPDATE_PERMISSIONS_MUTATION = gql`\nmutation updatedPermissions($permissions: [Permission].\n$userId: ID!){\n    updatePermissions(permissions: $permissions, userId: $userId)\n}\n`;\n\nconst ALL_USERS_QUERY = gql`\n  query {\n    users {\n      id\n      email\n      name\n      permissions\n    }\n  }\n`;\n\nconst Permissions = (props) => (\n  <Query query={ALL_USERS_QUERY}>\n    {({ data, loading, error }) => (\n      <div>\n        <Error error={error} />\n        <h2>Manage Permissions</h2>\n        <Table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Email</th>\n              {possiblePermissions.map((permission) => (\n                <th key={permission}>{permission}</th>\n              ))}\n              <th>üëáüèΩ</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.users.map((user) => (\n              <UserPermissions user={user} key={user.id} />\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    )}\n  </Query>\n);\n\nclass UserPermissions extends React.Component {\n  static propTypes = {\n    user: PropTypes.shape({\n      name: PropTypes.string,\n      email: PropTypes.string,\n      id: PropTypes.string,\n    }).isRequired,\n  };\n  //you usually don't want to set state with props. This is beacause if something is\n  // changed at the higher level, it wont update state here.\n  // HOWEVER, this is fine. We are only using it to seed data that will be updated in\n  // this component and sent to the backend\n  state = {\n    permissions: this.props.user.permissions,\n  };\n  handlePermissionChange = (e) => {\n    const checkbox = e.target;\n    //take a copy of the current permissions\n    let updatedPermissions = [...this.state.permissions];\n    // figure out if we need to remove this permission.\n    if (checkbox.checked) {\n      //add it in!\n      updatedPermissions.push(checkbox.value);\n    } else {\n      updatedPermissions = updatedPermissions.filter(\n        (permission) => permission !== checkbox.value\n      );\n    }\n    this.setState({ permissions: updatedPermissions });\n    console.log(updatedPermissions);\n  };\n  render() {\n    const user = this.props.user;\n    return (\n      <tr>\n        <td>{user.name}</td>\n        <td>{user.email}</td>\n        {possiblePermissions.map((permission) => (\n          <td key={permission}>\n            <label htmlFor={`${user.id}-permission-${permission}`}>\n              <input\n                id={`${user.id}-permission-${permission}`}\n                type=\"checkbox\"\n                checked={this.state.permissions.includes(permission)}\n                value={permission}\n                onChange={this.handlePermissionChange}\n              ></input>\n            </label>\n          </td>\n        ))}\n        <td>\n          <SickButton>Update</SickButton>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default Permissions;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AAOA;AACA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAhBA;AAFA;AACA;AA2BA;;;;;;;;;;;;;;;;;;AAYA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAvDA;AACA;AADA;AAEA;AACA;AACA;AACA;AAHA;AADA;AACA;AAwDA;;;;A","sourceRoot":""}