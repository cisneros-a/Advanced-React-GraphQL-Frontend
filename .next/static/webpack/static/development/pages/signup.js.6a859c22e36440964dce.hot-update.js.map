{"version":3,"file":"static/webpack/static/development/pages/signup.js.6a859c22e36440964dce.hot-update.js","sources":["webpack:///./components/RequestReset.js","webpack:///./components/Signin.js","webpack:///./pages/signup.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Form from \"./styles/Form\";\nimport Error from \"./ErrorMessage\";\n\nconst REQUEST_RESET_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String) {\n    requestReset(email: $email) {\n      message\n    }\n  }\n`;\n\nclass RequestReset extends Component {\n  state = {\n    email: \"\",\n  };\n\n  saveToState = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <Mutation mutation={REQUEST_RESET_MUTATION} variables={this.state}>\n        {(reset, { error, loading }) => {\n          return (\n            // We are explicitly setting this to post, just in case an error occurs, we do not\n            //  the values of the form, which includes the password, to show on the URL.\n            <Form\n              method=\"post\"\n              onSubmit={async (e) => {\n                e.preventDefault();\n                await reset();\n                this.setState({\n                  email: \"\",\n                });\n              }}\n            >\n              <fieldset disabled={loading} aria-busy={loading}>\n                <h2>Request a password reset</h2>\n                <Error error={error} />\n                <label htmlFor=\"email\">\n                  Email\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"email\"\n                    value={this.state.email}\n                    onChange={this.saveToState}\n                  />\n                </label>\n\n                <button type=\"submit\">Request reset</button>\n              </fieldset>\n            </Form>\n          );\n        }}\n      </Mutation>\n    );\n  }\n}\n\nexport default RequestReset;\n","import React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Form from \"./styles/Form\";\nimport Error from \"./ErrorMessage\";\nimport { CURRENT_USER_QUERY } from \"./User\";\n\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    signin(email: $email, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nclass SignIn extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  saveToState = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <Mutation\n        mutation={SIGNIN_MUTATION}\n        variables={this.state}\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n      >\n        {(signin, { error, loading }) => {\n          return (\n            // We are explicitly setting this to post, just in case an error occurs, we do not\n            //  the values of the form, which includes the password, to show on the URL.\n            <Form\n              method=\"post\"\n              onSubmit={async (e) => {\n                e.preventDefault();\n                await signin();\n                this.setState({\n                  email: \"\",\n                  password: \"\",\n                });\n              }}\n            >\n              <fieldset disabled={loading} aria-busy={loading}>\n                <h2>Sign in to your account!</h2>\n                <Error error={error} />\n                <label htmlFor=\"email\">\n                  Email\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"email\"\n                    value={this.state.email}\n                    onChange={this.saveToState}\n                  />\n                </label>\n\n                <label htmlFor=\"password\">\n                  Password\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"password\"\n                    value={this.state.password}\n                    onChange={this.saveToState}\n                  />\n                </label>\n                <button type=\"submit\">Sign in!</button>\n              </fieldset>\n            </Form>\n          );\n        }}\n      </Mutation>\n    );\n  }\n}\n\nexport default SignIn;\n","import styled from \"styled-components\";\nimport Signup from \"../components/Signup\";\nimport Signin from \"../components/Signin\";\nimport RequestReset from \"../components/RequestReset\";\n\nconst Columns = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: 20px;\n`;\n\nconst SignupPage = (props) => (\n  <Columns>\n    <Signup />\n    <Signin />\n    <RequestReset />\n  </Columns>\n);\n\nexport default SignupPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAOA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AADA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BA;AA+BA;AAGA;;;;AA/CA;AACA;AAiDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AASA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAFA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtCA;AA0CA;AAGA;;;;AAhEA;AACA;AAkEA;;;;;;;;;;;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AAOA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}