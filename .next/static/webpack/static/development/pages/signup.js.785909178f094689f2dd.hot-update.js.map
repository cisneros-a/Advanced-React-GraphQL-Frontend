{"version":3,"file":"static/webpack/static/development/pages/signup.js.785909178f094689f2dd.hot-update.js","sources":["webpack:///./components/Signup.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Form from \"./styles/Form\";\nimport Error from \"./ErrorMessage\";\nimport { th } from \"date-fns/locale\";\n\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION(\n    $email: String!\n    $name: String!\n    $password: String!\n  ) {\n    signup(email: $email, name: $name, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nclass Signup extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  saveToState = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <Mutation mutation={SIGNUP_MUTATION} variables={this.state}>\n        {(signup, { error, loading }) => {\n          return (\n            // We are explicitly setting this to post, just in case an error occurs, we do not\n            //  the values of the form, which includes the password, to show on the URL.\n            <Form\n              method=\"post\"\n              onSubmit={async (e) => {\n                e.preventDefault();\n                await signup();\n                this.setState({\n                  name: \"\",\n                  email: \"\",\n                  password: \"\",\n                });\n              }}\n            >\n              <fieldset disabled={loading} aria-busy={loading}>\n                <h2>Sign up for an account!</h2>\n                <Error error={error} />\n                <label htmlFor=\"email\">\n                  Email\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"email\"\n                    value={this.state.email}\n                    onChange={this.saveToState}\n                  />\n                </label>\n                <label htmlFor=\"name\">\n                  Name\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"name\"\n                    value={this.state.name}\n                    onChange={this.saveToState}\n                  />\n                </label>\n                <label htmlFor=\"password\">\n                  Password\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"password\"\n                    value={this.state.password}\n                    onChange={this.saveToState}\n                  />\n                </label>\n                <button type=\"submit\">Sign Up!</button>\n              </fieldset>\n            </Form>\n          );\n        }}\n      </Mutation>\n    );\n  }\n}\n\nexport default Signup;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAaA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhDA;AAoDA;AAGA;;;;AAtEA;AACA;AAwEA;;;;A","sourceRoot":""}